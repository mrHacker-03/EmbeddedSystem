#include <msp430.h>
int pwmDirection = 1;
void main(void)
{
 WDTCTL = WDTPW | WDTHOLD; // Stop WDT
 // Configure ADC
 ADC10CTL0 = SREF_0 + ADC10SHT_2 + ADC10ON; // ADC10ON, 
 ADC10CTL1 = INCH_3; // input A3
 ADC10AE0 |= BIT3; // PA.3 ADC option select
 // Configure PWM
 P1DIR |= BIT6; // Green LED output
 P1SEL |= BIT6; // Green LED PWM function
 TA0CCR0 = 1024; // PWM Period
 TA0CCR1 = 1; // PWM duty cycle, initially 1/1024
 TA0CCTL1 = OUTMOD_7; // CCR1 reset/set
 TA0CTL = TASSEL_2 + MC_1 + ID_3; // SMCLK, up mode, clo
 // Enable interrupts
 TA0CCTL0 |= CCIE; // Enable Timer A interrupt
 ADC10CTL0 |= ADC10IE; // Enable ADC interrupt
 __bis_SR_register(LPM0_bits + GIE); // Enter LPM0 with 
}
// Timer A0 interrupt service routine
#pragma vector = TIMER0_A0_VECTOR
__interrupt void Timer_A(void)
{
 // Start ADC conversion
 ADC10CTL0 |= ENC + ADC10SC;
}
// ADC10 interrupt service routine
MSP 430 5
#pragma vector = ADC10_VECTOR
__interrupt void ADC10_ISR(void)
{
 // Update PWM duty cycle based on ADC value
 TA0CCR1 = ADC10MEM;
}
